path_cloud <- 'C:/Users/samih/OneDrive/Documents/Blue Whale Data Resolution Project/New Clouded Data/'
# install.packages("lmtest")
setwd(path_cloud)
state_geo_3_tmp_1 <- read.csv('state_geo_3_tmp_1_yr_2008.csv')
state_geo_3_tmp_3 <- read.csv('state_geo_3_tmp_3_yr_2008.csv')
state_geo_3_tmp_8 <- read.csv('state_geo_3_tmp_8_yr_2008.csv')
state_geo_12_tmp_3 <- read.csv('state_geo_12_tmp_3_yr_2008.csv')
state_geo_12_tmp_1 <- read.csv('state_geo_12_tmp_1_yr_2008.csv')
state_geo_12_tmp_8 <- read.csv('state_geo_12_tmp_8_yr_2008.csv')
state_geo_3_tmp_1_clouded_8 <- read.csv('state_geo_3_tmp_1_clouded_8.csv')
state_geo_3_tmp_3_clouded_8 <- read.csv('state_geo_3_tmp_3_clouded_8.csv')
state_geo_12_tmp_1_clouded_8 <- read.csv('state_geo_12_tmp_1_clouded_8.csv')
state_geo_12_tmp_3_clouded_8 <- read.csv('state_geo_12_tmp_3_clouded_8.csv')
state_geo_3_tmp_1_clouded_3 <- read.csv('state_geo_3_tmp_1_clouded_3.csv')
state_geo_12_tmp_1_clouded_3 <- read.csv('state_geo_12_tmp_1_clouded_3.csv')
comp <- function(ser1, ser2)
{
l2 <- sqrt(sum((ser1-ser2)^2))
# covar <- cov(ser1,ser2)
# autocor <- min(ccf(ser1, ser2)$acf)  # zero index means zero lag
# return(c(l2, covar, autocor))
return(l2)
}
## we coarsen temporally, 'add cloud cover' and fix it with 1 day and 3 days
## then compare the coarse unclouded and coarse clouded to the same data
## if it had not been coarsened temporally (1 day).
## The spatial coarsening is constant between them
# for 3 km 3 day
c3_1_3 <- comp(state_geo_3_tmp_1, state_geo_3_tmp_3) #3 km 3 day vs original
c3_3_cloud_3 <- comp(state_geo_3_tmp_1, state_geo_3_tmp_1_clouded_3) #same but 3km 3 day has 30% 3km 1 day
# for 12 km 3 day
c12_1_3 <- comp(state_geo_12_tmp_1, state_geo_12_tmp_3) #3 km 3 day vs original
c12_3_cloud_3 <- comp(state_geo_12_tmp_1, state_geo_12_tmp_1_clouded_3) #same but 3km 3 day has 30% 3km 1 day
# for 3 km 8 day
c3_1 <- comp(state_geo_3_tmp_1, state_geo_3_tmp_8) #3 km 8 day vs original
c3_3_cloud <- comp(state_geo_3_tmp_1, state_geo_3_tmp_3_clouded_8) #same but 3km 8 day has 30% 3km 3 day
c3_1_cloud <- comp(state_geo_3_tmp_1, state_geo_3_tmp_1_clouded_8) #same but 3km 8 day has 30% original
# for 12 km 8 day
c12_1 <- comp(state_geo_12_tmp_1, state_geo_12_tmp_8) #12 km 8 day vs 12 km 1 day
c12_3_cloud <- comp(state_geo_12_tmp_1, state_geo_12_tmp_3_clouded_8) #same but 12km 8 day has 30% 3 day
c12_1_cloud <- comp(state_geo_12_tmp_1, state_geo_12_tmp_1_clouded_8) #same but 12km 8 day has 30% 1 day
## 3 day: 41.54736% decrease in l2 for 3km, 52.45294% for 12km
# > c3_1_3
# [1] 1.331777
# > c3_3_cloud_3
# [1] 0.7784588
# > c12_1_3
# [1] 1.520156
# > c12_3_cloud_3
# [1] 0.8738156
## 8 day: can see that as finer data is introduced to coarse, the l2 between it and fine gets better
# > c3_1
# [1] 1.852284
# > c3_3_cloud
# [1] 1.148272
# > c3_1_cloud
# [1] 1.068056
# > c12_1
# [1] 2.217393
# > c12_3_cloud
# [1] 1.538581
# > c12_1_cloud
# [1] 1.180139
# plot
library('zoo')
mval = 10
plot(rollmean(state_geo_3_tmp_1,mval), col="white")
lines(rollmean(state_geo_3_tmp_1,mval), col = "darkblue")
lines(rollmean(state_geo_3_tmp_8,mval), col = "red")
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "orange")
mval = 1
plot(rollmean(state_geo_3_tmp_1,mval), col="white")
lines(rollmean(state_geo_3_tmp_1,mval), col = "darkblue")
lines(rollmean(state_geo_3_tmp_8,mval), col = "red")
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "orange")
mval = 3
plot(rollmean(state_geo_3_tmp_1,mval), col="white")
lines(rollmean(state_geo_3_tmp_1,mval), col = "darkblue")
lines(rollmean(state_geo_3_tmp_8,mval), col = "red")
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "orange")
mval = 5
plot(rollmean(state_geo_3_tmp_1,mval), col="white")
lines(rollmean(state_geo_3_tmp_1,mval), col = "darkblue")
lines(rollmean(state_geo_3_tmp_8,mval), col = "red")
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "orange")
mval = 5
plot(rollmean(state_geo_3_tmp_1,mval), col="white", lwd=2)
lines(rollmean(state_geo_3_tmp_1,mval), col = "darkblue", lwd=2)
lines(rollmean(state_geo_3_tmp_8,mval), col = "red", lwd=2)
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "orange", lwd=2)
plot(rollmean(state_geo_3_tmp_1,mval), col="white", lwd=2)
lines(rollmean(state_geo_3_tmp_1,mval), col = "darkblue", lwd=2)
lines(rollmean(state_geo_3_tmp_8,mval), col = "red", lwd=2)
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "darkgrey", lwd=2)
mval = 5
plot(rollmean(state_geo_3_tmp_1,mval), col="white", lwd=2)
lines(rollmean(state_geo_3_tmp_1,mval), col = "black", lwd=2)
lines(rollmean(state_geo_3_tmp_8,mval), col = "red", lwd=2)
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "darkcyan", lwd=2)
## load packages
require(adehabitatHR)
require(sp)
require(ggplot2)
require(plot3D)
ptm = proc.time()
## set working directory
setwd("~/Blue Whale data Resolution Project")
## for standard (no rate) comparison for each month
geo <-c(3,6,9,12,24)
tmp <- 8
rate_string <- c("", "_rate_1", "_rate_2")
rate_string2 <- c("_rate_4", "_rate_1", "_rate_2")
geo_vals <- rep(paste(geo),length(rate_string))
tmp_vals <- tmp
head <- "output_data_geo_"
file_names <- paste(head, geo_vals, "_tmp_", tmp_vals, rate_string, "_sep", ".csv", sep = "")
file_labels <- paste("geo_", geo_vals, "_tmp_", tmp_vals, rate_string2, sep = "")
prep_file <- function(i){
# load file
df_temp <- read.csv(file_names[i], header=FALSE)
# add id column
cols <- c("x","y","id")
# format
mylen <- dim(df_temp)[1]
label <- rep(c(file_labels[i]), mylen)
df_temp$id <- label
colnames(df_temp) <- cols
return(df_temp)
}
## load map
map_df <- read.csv("krill.csv", header = TRUE)
map_matrix <- t(as.matrix(map_df))
## set map to binary
map_mask <- map_matrix
for(i in 1:length(map_mask)){
map_mask[i] <- ifelse(is.na(map_mask[i]), 0, 1)
}
## prepare for loop
indices <- 1:length(file_names)
xvals <- seq(0, 359*3000, by = 3000)
yvals <- seq(0, 360*3000, by = 3000)
df_standard <- prep_file(1)
## loop through files
for (i in indices){
df_compare <- prep_file(i)
# stack dataframes and rearrange columns
df <- rbind(df_standard, df_compare)
df <- df[,c("id","x","y")]
# set up SpatialPointsDataFrame for the dataframe
coordinates(df) <- c("x", "y")
proj4string(df) <- CRS(as.character(NA))
# compute utilization distributions and generate heatmap
ud <- kernelUD(df, h = "href")
# get contour
ver_test <- getverticeshr(ud, percent = 70)
# get x and y limits
xmin <- min(df_compare$x, df_standard$x)
xmax <- max(df_compare$x, df_standard$x)
ymin <- min(df_compare$y, df_standard$y)
ymax <- max(df_compare$y, df_standard$y)
# plot
png(paste(file_labels[i], "_ud.png", sep = ""))
par(mar = c(2, 2, 2, 2))
image2D(map_mask, yvals, xvals, col = gray.colors(2, end = 1, alpha = .4),
axes = FALSE, frame.plot = FALSE, colkey = FALSE,
title = file_labels[i])
points(df_compare$x, df_compare$y, col = alpha('darkcyan', 0.3), pch = 19)
plot(ver_test, lty = 1, lwd = 2, ylim = c(ymin, ymax), xlim = c(xmin, xmax),
border = c('red', 'black'), add = TRUE)
dev.off()
}
proc.time() - ptm
plot(rollmean(state_geo_3_tmp_1,mval), col="white", lwd=2)
lines(rollmean(state_geo_3_tmp_1,mval), col = "black", lwd=2) # 3km gold standard is always black
lines(rollmean(state_geo_3_tmp_8,mval), col = "red", lwd=2)
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "darkcyan", lwd=2)
lines(rollmean(state_geo_3_tmp_1_clouded_8,10), col = "violet", lwd=2)
plot(rollmean(state_geo_3_tmp_1,mval), col="white", lwd=2)
lines(rollmean(state_geo_3_tmp_1,mval), col = "black", lwd=2) # 3km gold standard is always black
lines(rollmean(state_geo_3_tmp_8,mval), col = "red", lwd=2)
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "darkcyan", lwd=2)
lines(rollmean(state_geo_12_tmp_1,mval), col = "violet", lwd=2)
mval = 5
plot(rollmean(state_geo_3_tmp_1,mval), col="white", lwd=2)
lines(rollmean(state_geo_3_tmp_1,mval), col = "black", lwd=2) # 3km gold standard is always black
lines(rollmean(state_geo_3_tmp_8,mval), col = "red", lwd=2)
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "darkcyan", lwd=2)
lines(rollmean(state_geo_12_tmp_1,mval), col = "orchid", lwd=2)
plot(rollmean(state_geo_3_tmp_1,mval), col="white", lwd=2)
lines(rollmean(state_geo_3_tmp_1,mval), col = "black", lwd=2) # 3km gold standard is always black
lines(rollmean(state_geo_3_tmp_8,mval), col = "red", lwd=2)
lines(rollmean(state_geo_3_tmp_1_clouded_8,mval), col = "darkcyan", lwd=2)
lines(rollmean(state_geo_12_tmp_1,mval), col = "mediumorchid", lwd=2)
